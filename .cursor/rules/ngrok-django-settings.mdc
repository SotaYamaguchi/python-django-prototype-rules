---
alwaysApply: true
description: Django settings for ngrok external access configuration
---
# Django ngrok Public Access Configuration

## ALLOWED_HOSTS Settings
When developing with ngrok for external access, always configure ALLOWED_HOSTS properly:

```python
# For development with ngrok - allow all hosts
ALLOWED_HOSTS = ['*']  # Allow all hosts for development (including ngrok)
```

## CSRF Protection for External Access
When using ngrok or other tunneling services, configure CSRF_TRUSTED_ORIGINS to prevent CSRF errors:

```python
# CSRF settings for ngrok and external access
CSRF_TRUSTED_ORIGINS = [
    'https://*.ngrok.io',
    'https://*.ngrok-free.app',
    'http://127.0.0.1:8000',
    'http://localhost:8000',
]
```

## Security Considerations
- These settings are for **development only**
- In production, use specific domain names instead of wildcard `['*']`
- Always validate the ngrok domain patterns match your actual ngrok service
- Consider using environment variables for different deployment environments

## Usage Pattern
1. Add these settings to Django settings.py
2. Restart Django development server
3. Start ngrok: `ngrok http 127.0.0.1:8000`
4. Access the generated ngrok URL - it should work without DISALLOWED_HOST errors

## Common ngrok Domains
- `*.ngrok.io` - Standard ngrok domain
- `*.ngrok-free.app` - Free tier ngrok domain
- `*.ngrok.app` - Alternative ngrok domain pattern